name: Main Build

on:
  pull_request:
    branches: [ main ]

env:
  CONFIGURATION: Release
  FRAMEWORK: net5.0
  DOTNETVERSION: '5.0.x'
  Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{env.DOTNETVERSION}}
        # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2          
      
      - name: Update manifest version
        run: |
          [xml]$directoryProps = get-content "Directory.Build.Props"
          [xml]$manifest = get-content "TeslaVideoCenter.Windows.Package/Package.appxmanifest"
          $manifest.Package.Identity.Version = $directoryProps.Project.PropertyGroup.VersionPrefix + "." + (Get-Date).DayOfYear + "." + $env:GITHUB_RUN_NUMBER
          $manifest.save("TeslaVideoCenter.Windows.Package/Package.appxmanifest")
      - name: Install dependencies
        run: msbuild /t:Restore /p:Configuration=${{ env.Configuration }} /p:RuntimeIdentifier=win10-x64
      #- name: Build
      #  run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
      #- name: Test
      #  run: dotnet test --no-restore --verbosity normal
        # Build the Windows Application Packaging project
      - name: Build the Windows Application Packaging Project (wapproj) 
        run: msbuild TeslaVideoCenter.Windows.Package/TeslaVideoCenter.Windows.Package.wapproj /p:Platform=${{ env.TargetPlatform }} /p:Configuration=${{ env.Configuration }} /p:UapAppxPackageBuildMode=${{ env.BuildMode }} /p:AppxBundle=${{ env.AppxBundle }} /p:PackageCertificatePassword=${{ secrets.PFXPASSWORD}}
        env:
          AppxBundle: Never
          BuildMode: SideLoadOnly
          TargetPlatform: x64

  macos-bundle:
    runs-on: macOS-latest
    
    defaults:
      run:
        working-directory: TeslaVideoCenter.Mac
      
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:  ${{env.DOTNETVERSION}}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
