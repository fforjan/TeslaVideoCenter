name: Main Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CONFIGURATION: Release
  FRAMEWORK: net5.0
  DOTNETVERSION: '5.0.100'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{env.DOTNETVERSION}}
        # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
        # Build the Windows Application Packaging project
      - name: Build the Windows Application Packaging Project (wapproj) 
        run: msbuild /p:Platform=${{ env.TargetPlatform }} /p:Configuration=${{ env.Configuration }} /p:UapAppxPackageBuildMode=${{ env.BuildMode }} /p:AppxBundle=${{ env.AppxBundle }}
        env:
          AppxBundle: Never
          BuildMode: SideLoadOnly
          TargetPlatform: x64
      #- name: Upload Windows App
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: Windows-App
      #    path: TeslaVideoCenter.Windows/bin/${{ env.CONFIGURATION }}/${{ env.FRAMEWORK}}/win10-x64/publish/

  macos-bundle:
    runs-on: macOS-latest
    
    defaults:
      run:
        working-directory: TeslaVideoCenter.Mac
      
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:  ${{env.DOTNETVERSION}}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
    - name: Publish MacOS
      run: dotnet msbuild -t:BundleApp -p:RuntimeIdentifier=osx-x64 -property:Configuration=${{ env.CONFIGURATION }}
    - name: Archive MacOS App
      run: tar -cf TeslaVideoCenter.tar 'Tesla Video Center.app'
      working-directory: TeslaVideoCenter.Mac/bin/${{ env.CONFIGURATION }}/${{ env.FRAMEWORK}}/osx-x64/publish/
    - name: Upload MacOS App
      uses: actions/upload-artifact@v2
      with:
        name: MacOS-App
        path: 'TeslaVideoCenter.Mac/bin/${{ env.CONFIGURATION }}/${{ env.FRAMEWORK}}/osx-x64/publish/TeslaVideoCenter.tar'
